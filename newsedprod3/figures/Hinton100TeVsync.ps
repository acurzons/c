%!PS-Adobe-2.0
%%Title: Hinton100TeVsync.ps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Mon Feb 16 13:51:04 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Hinton100TeVsync.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (fabien)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Feb 16 13:51:04 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
938 737 M
31 0 V
5978 0 R
-31 0 V
938 1013 M
31 0 V
5978 0 R
-31 0 V
938 1154 M
31 0 V
5978 0 R
-31 0 V
938 1222 M
63 0 V
5946 0 R
-63 0 V
stroke
854 1222 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-13)]
] -46.7 MRshow
1.000 UL
LTb
938 1431 M
31 0 V
5978 0 R
-31 0 V
938 1707 M
31 0 V
5978 0 R
-31 0 V
938 1849 M
31 0 V
5978 0 R
-31 0 V
938 1916 M
63 0 V
5946 0 R
-63 0 V
stroke
854 1916 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-12)]
] -46.7 MRshow
1.000 UL
LTb
938 2125 M
31 0 V
5978 0 R
-31 0 V
938 2401 M
31 0 V
5978 0 R
-31 0 V
938 2543 M
31 0 V
5978 0 R
-31 0 V
938 2610 M
63 0 V
5946 0 R
-63 0 V
stroke
854 2610 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-11)]
] -46.7 MRshow
1.000 UL
LTb
938 2819 M
31 0 V
5978 0 R
-31 0 V
938 3095 M
31 0 V
5978 0 R
-31 0 V
938 3237 M
31 0 V
5978 0 R
-31 0 V
938 3304 M
63 0 V
5946 0 R
-63 0 V
stroke
854 3304 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-10)]
] -46.7 MRshow
1.000 UL
LTb
938 3513 M
31 0 V
5978 0 R
-31 0 V
938 3789 M
31 0 V
5978 0 R
-31 0 V
938 3931 M
31 0 V
5978 0 R
-31 0 V
938 3998 M
63 0 V
5946 0 R
-63 0 V
stroke
854 3998 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-09)]
] -46.7 MRshow
1.000 UL
LTb
938 4207 M
31 0 V
5978 0 R
-31 0 V
938 4483 M
31 0 V
5978 0 R
-31 0 V
938 4625 M
31 0 V
5978 0 R
-31 0 V
938 4692 M
63 0 V
5946 0 R
-63 0 V
stroke
854 4692 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-08)]
] -46.7 MRshow
1.000 UL
LTb
1327 588 M
0 63 V
0 4220 R
0 -63 V
stroke
1327 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-16)]
] -46.7 MCshow
1.000 UL
LTb
1760 588 M
0 31 V
0 4252 R
0 -31 V
2193 588 M
0 63 V
0 4220 R
0 -63 V
stroke
2193 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-14)]
] -46.7 MCshow
1.000 UL
LTb
2626 588 M
0 31 V
0 4252 R
0 -31 V
3059 588 M
0 63 V
0 4220 R
0 -63 V
stroke
3059 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-12)]
] -46.7 MCshow
1.000 UL
LTb
3492 588 M
0 31 V
0 4252 R
0 -31 V
3925 588 M
0 63 V
0 4220 R
0 -63 V
stroke
3925 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-10)]
] -46.7 MCshow
1.000 UL
LTb
4358 588 M
0 31 V
0 4252 R
0 -31 V
4790 588 M
0 63 V
0 4220 R
0 -63 V
stroke
4790 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-08)]
] -46.7 MCshow
1.000 UL
LTb
5223 588 M
0 31 V
0 4252 R
0 -31 V
5656 588 M
0 63 V
0 4220 R
0 -63 V
stroke
5656 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-06)]
] -46.7 MCshow
1.000 UL
LTb
6089 588 M
0 31 V
0 4252 R
0 -31 V
6522 588 M
0 63 V
0 4220 R
0 -63 V
stroke
6522 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0e-04)]
] -46.7 MCshow
1.000 UL
LTb
6955 588 M
0 31 V
0 4252 R
0 -31 V
stroke
938 4871 N
938 588 L
6009 0 V
0 4283 V
-6009 0 V
Z stroke
LCb setrgbcolor
112 2729 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (E)]
[(Helvetica) 112.0 70.0 true true 0 (2)]
[(Helvetica) 140.0 0.0 true true 0 ( dN/dE \(TeV cm)]
[(Helvetica) 112.0 70.0 true true 0 (-2)]
[(Helvetica) 140.0 0.0 true true 0 ( s)]
[(Helvetica) 112.0 70.0 true true 0 (-1)]
[(Helvetica) 140.0 0.0 true true 0 (\))]
] -60.7 MCshow
grestore
LTb
LCb setrgbcolor
3942 238 M
[ [(Helvetica) 140.0 0.0 true true 0 (E)]
[(Symbol) 112.0 -42.0 true true 0 (g)]
[(Helvetica) 140.0 0.0 true true 0 ( \(TeV\))]
] -32.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6296 4738 M
[ [(Helvetica) 140.0 0.0 true true 0 (hinton sync)]
] -46.7 MRshow
LT0
6380 4738 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
3255 1634 M
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
220 528 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
209 488 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
233 504 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
322 600 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
125 112 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
130 -152 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
95 -440 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
23 -424 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
23 -568 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
17 -656 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
-1 -432 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
3252 1638 M
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
245 505 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
234 465 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
257 481 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
348 577 R
6 0 V
-6 -31 R
0 62 V
stroke 4360 3821 M
6 -62 R
0 62 V
150 89 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
155 -175 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
120 -463 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
48 -447 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
48 -591 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
42 -679 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
24 -455 R
6 0 V
-6 -31 R
0 62 V
6 -62 R
0 62 V
3255 1638 Pls
3506 2174 Pls
3746 2670 Pls
4010 3182 Pls
4363 3790 Pls
4519 3910 Pls
4680 3766 Pls
4806 3334 Pls
4860 2918 Pls
4914 2358 Pls
4962 1710 Pls
4992 1286 Pls
6579 4738 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
6296 4598 M
[ [(Helvetica) 140.0 0.0 true true 0 (synchrotron 100TeV)]
] -46.7 MRshow
LT1
2821 628 Crs
2842 674 Crs
2864 720 Crs
2886 767 Crs
2907 813 Crs
2929 859 Crs
2951 905 Crs
2972 952 Crs
2994 998 Crs
3016 1044 Crs
3037 1090 Crs
3059 1136 Crs
3081 1182 Crs
3102 1229 Crs
3124 1275 Crs
3146 1321 Crs
3167 1367 Crs
3189 1413 Crs
3210 1459 Crs
3232 1505 Crs
3254 1551 Crs
3275 1597 Crs
3297 1643 Crs
3319 1689 Crs
3340 1735 Crs
3362 1781 Crs
3384 1827 Crs
3405 1873 Crs
3427 1919 Crs
3449 1964 Crs
3470 2010 Crs
3492 2056 Crs
3513 2101 Crs
3535 2147 Crs
3557 2193 Crs
3578 2238 Crs
3600 2283 Crs
3622 2329 Crs
3643 2374 Crs
3665 2419 Crs
3687 2464 Crs
3708 2510 Crs
3730 2554 Crs
3752 2599 Crs
3773 2644 Crs
3795 2689 Crs
3816 2733 Crs
3838 2777 Crs
3860 2821 Crs
3881 2865 Crs
3903 2909 Crs
3925 2952 Crs
3946 2995 Crs
3968 3038 Crs
3990 3081 Crs
4011 3123 Crs
4033 3165 Crs
4055 3207 Crs
4076 3248 Crs
4098 3288 Crs
4119 3328 Crs
4141 3368 Crs
4163 3407 Crs
4184 3445 Crs
4206 3482 Crs
4228 3518 Crs
4249 3554 Crs
4271 3588 Crs
4293 3621 Crs
4314 3652 Crs
4336 3682 Crs
4358 3711 Crs
4379 3737 Crs
4401 3762 Crs
4423 3783 Crs
4444 3803 Crs
4466 3819 Crs
4487 3832 Crs
4509 3840 Crs
4531 3845 Crs
4552 3845 Crs
4574 3839 Crs
4596 3827 Crs
4617 3808 Crs
4639 3782 Crs
4661 3747 Crs
4682 3702 Crs
4704 3646 Crs
4726 3577 Crs
4747 3495 Crs
4769 3397 Crs
4790 3281 Crs
4812 3145 Crs
4834 2987 Crs
4855 2804 Crs
4877 2593 Crs
4899 2350 Crs
4920 2071 Crs
4942 1753 Crs
4964 1390 Crs
4985 977 Crs
6579 4598 Crs
% End plot #2
1.000 UL
LTb
938 4871 N
938 588 L
6009 0 V
0 4283 V
-6009 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
